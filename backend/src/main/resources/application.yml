# JVM Timezone Configuration
# Set this to your local timezone (e.g., Asia/Kolkata, America/New_York, Europe/London)
# You can also set this via environment variable: TIMEZONE=Asia/Kolkata
# Common timezones: Asia/Kolkata, Asia/Dubai, Asia/Shanghai, America/New_York, Europe/London
# 
# To set timezone via JVM options, add these to your startup command:
# -Duser.timezone=Asia/Kolkata
# -Dspring.jackson.time-zone=Asia/Kolkata

server:
  port: 8100
  servlet:
    multipart:
      max-file-size: 500MB
      max-request-size: 500MB
      enabled: true
      file-size-threshold: 2KB
      location: ${java.io.tmpdir}
      resolve-lazily: false
  tomcat:
    max-http-form-post-size: 500MB
    max-swallow-size: 500MB
    connection-timeout: 60000
    max-connections: 8192
    accept-count: 100
    max-threads: 200
    min-spare-threads: 10


spring:
  application:
    name: iot-platform-backend
  
  # Set timezone to use system default
  jackson:
    time-zone: ${TIMEZONE:Asia/Kolkata}
  
  servlet:
    multipart:
      max-file-size: 500MB
      max-request-size: 500MB
      enabled: true
      file-size-threshold: 2KB
      location: ${java.io.tmpdir}
      resolve-lazily: false

  # datasource:
  #   url: jdbc:postgresql://localhost:5432/iotplatform
  #   driver-class-name: org.postgresql.Driver
  #   username: ${DB_USERNAME:postgres}
  #   password: ${DB_PASSWORD:Vivek@1234}
  
    
  datasource:
    url: jdbc:postgresql://localhost:5432/iotplatform
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:123}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-test-query: SELECT 1

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        hbm2ddl:
          auto: update
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  sql:
    init:
      mode: always
      continue-on-error: true
      schema-locations: classpath:schema.sql

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME:}
    password: ${EMAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:shiftAIOT_secure_jwt_secret_key_2024_should_be_at_least_256_bits_long_for_security}
  expiration: 86400000 # 24 hours in ms (more secure)
  refresh-expiration: 604800000 # 7 days in ms for refresh tokens

# MQTT Configuration
mqtt:
  broker-url: ${MQTT_BROKER_URL:tcp://localhost:1883}
  client-id: iot-platform-backend
  username: ${MQTT_USERNAME:}
  password: ${MQTT_PASSWORD:}

# OpenAI Configuration
openai:
  api-key: ${OPENAI_API_KEY:}

# File Upload Configuration
file:
  upload-dir: ${FILE_UPLOAD_DIR:./uploads}
  max-size: 500MB
  allowed-types: pdf,PDF

# App-specific file configuration
app:
  file:
    max-size: 524288000  # 500MB in bytes

# PDF Processing Configuration
pdf:
  processing:
    base-url: http://20.57.36.66:8000
    max-file-size: 524288000  # 500MB in bytes (updated to match server config)
    connection-timeout: 0  # No timeout (infinite)
    read-timeout: 0  # No timeout (infinite)
    max-retries: 3
    retry-delay: 1000  # 1 second
    async:
      core-pool-size: 5
      max-pool-size: 10
      queue-capacity: 25
      thread-name-prefix: pdf-processing-
      keep-alive-seconds: 60

# Maintenance Notification Scheduler Configuration
maintenance:
  scheduler:
    enabled: true
    cron: "0 55 5 * * ?"  # Every day at 5:55 AM (5 minutes before schedule update)
    organization-id: "shiftAIOT-org-2024"  # Default organization ID for notifications
  
  # Maintenance Status Update Scheduler Configuration
  status-updater:
    enabled: true
    cron: "0 0 2 * * ?"  # Every day at 2:00 AM (before notification scheduler)

# Conversation API Configuration
conversation:
  api:
    base-url: "http://localhost:8100/api/chat"
    max-retries: 3
    retry-delay: 1000  # 1 second

# Slack MCP Configuration
slack:
  mcp:
    endpoint: "http://20.57.36.66:5000/chat"

# Push Notification Configuration
push:
  vapid:
    public-key: ${VAPID_PUBLIC_KEY:BN8WyzVySc9qA7hTWP_TpsdNSfw84H49eCj3GVkcpFjR13s0luOowkgpGpf4t4mxc2Fb0sgtsMHNbFyPxPTdMs4}
    private-key: ${VAPID_PRIVATE_KEY:3BSB5X1TVNnyv7fhsW39oyGJdwNha2hfm4m1NgnrJvk}
    "subject": "mailto: <s.tadikonda@theshiftai.in>"

# Jira Configuration
jira:
  base-url: ${JIRA_BASE_URL:}
  username: ${JIRA_USERNAME:}
  api-token: ${JIRA_API_TOKEN:}
  project-key: ${JIRA_PROJECT_KEY:}

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  show-actuator: true
  packages-to-scan: com.iotplatform.controller

# Logging
logging:
  level:
    root: INFO
    
    com.iotplatform: INFO
    
    # Hibernate logging - set to INFO for balanced logging
    org.hibernate: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
    org.hibernate.type.descriptor.sql: INFO
    org.hibernate.stat: INFO
    org.hibernate.engine.transaction.internal: INFO
    org.hibernate.engine.jdbc.spi: INFO
    org.hibernate.engine.jdbc.env.internal: INFO
    org.hibernate.engine.jdbc.connections.internal: INFO
    
    # Spring framework logging - set to INFO for balanced logging
    org.springframework: INFO
    org.springframework.web: INFO
    org.springframework.data.jpa: INFO
    org.springframework.web.multipart: INFO
    org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%-5level] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/iot-platform.log
    max-size: 20MB
    max-history: 30
